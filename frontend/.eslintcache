[{"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/index.js":"1","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/store/store.js":"2","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/session_api_util.js":"3","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/root.js":"4","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/session_actions.js":"5","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/app.js":"6","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/root_reducer.js":"7","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/route_util.js":"8","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/ScrollToTop.js":"9","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_reducer.js":"10","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/errors_reducer.js":"11","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/entities_reducer.js":"12","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar_container.js":"13","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/main/main_page.js":"14","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js":"15","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show_container.js":"16","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js":"17","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form_container.js":"18","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form_container.js":"19","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile_container.js":"20","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/room_container.js":"21","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/room.js":"22","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js":"23","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_errors_reducer.js":"24","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_reducer.js":"25","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js":"26","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/profile_reducer.js":"27","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_reducer.js":"28","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/user_reducer.js":"29","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/messages_reducer.js":"30","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/questions_actions.js":"31","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js":"32","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show.js":"33","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form.js":"34","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form.js":"35","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show.js":"36","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile.js":"37","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar.js":"38","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/responses_actions.js":"39","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/messages_actions.js":"40","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/questions_api_util.js":"41","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_index.js":"42","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/create_question_form_container.js":"43","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_index.js":"44","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/update_question_form_container.js":"45","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/create_room.js":"46","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index_container.js":"47","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js":"48","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js":"49","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/messenger/messenger_container.js":"50","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/responses_api_util.js":"51","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/messages_api_util.js":"52","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_form.js":"53","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/messenger/messenger.js":"54","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index.js":"55","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index_item.js":"56","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_form.js":"57"},{"size":1259,"mtime":1611209698295,"results":"58","hashOfConfig":"59"},{"size":930,"mtime":1610583341150,"results":"60","hashOfConfig":"59"},{"size":574,"mtime":1611185693935,"results":"61","hashOfConfig":"59"},{"size":286,"mtime":1609216554960,"results":"62","hashOfConfig":"59"},{"size":1980,"mtime":1611555723220,"results":"63","hashOfConfig":"59"},{"size":1519,"mtime":1611555723220,"results":"64","hashOfConfig":"59"},{"size":273,"mtime":1611555723230,"results":"65","hashOfConfig":"59"},{"size":1232,"mtime":1611555723230,"results":"66","hashOfConfig":"59"},{"size":258,"mtime":1611555723220,"results":"67","hashOfConfig":"59"},{"size":887,"mtime":1611555723230,"results":"68","hashOfConfig":"59"},{"size":383,"mtime":1610583341150,"results":"69","hashOfConfig":"59"},{"size":481,"mtime":1611185693925,"results":"70","hashOfConfig":"59"},{"size":511,"mtime":1611185693925,"results":"71","hashOfConfig":"59"},{"size":9129,"mtime":1611209661545,"results":"72","hashOfConfig":"59"},{"size":480,"mtime":1611185693925,"results":"73","hashOfConfig":"59"},{"size":1019,"mtime":1610583341150,"results":"74","hashOfConfig":"59"},{"size":877,"mtime":1610583341150,"results":"75","hashOfConfig":"59"},{"size":513,"mtime":1610583341150,"results":"76","hashOfConfig":"59"},{"size":623,"mtime":1610583341150,"results":"77","hashOfConfig":"59"},{"size":611,"mtime":1611555723230,"results":"78","hashOfConfig":"59"},{"size":211,"mtime":1610583341150,"results":"79","hashOfConfig":"59"},{"size":15624,"mtime":1611289382750,"results":"80","hashOfConfig":"59"},{"size":354,"mtime":1610583341150,"results":"81","hashOfConfig":"59"},{"size":487,"mtime":1610583341150,"results":"82","hashOfConfig":"59"},{"size":888,"mtime":1611185693925,"results":"83","hashOfConfig":"59"},{"size":354,"mtime":1610583341150,"results":"84","hashOfConfig":"59"},{"size":297,"mtime":1610583341150,"results":"85","hashOfConfig":"59"},{"size":565,"mtime":1610583341150,"results":"86","hashOfConfig":"59"},{"size":658,"mtime":1611555723230,"results":"87","hashOfConfig":"59"},{"size":770,"mtime":1611185693925,"results":"88","hashOfConfig":"59"},{"size":3119,"mtime":1611185693925,"results":"89","hashOfConfig":"59"},{"size":8574,"mtime":1611555723220,"results":"90","hashOfConfig":"59"},{"size":7012,"mtime":1611555723230,"results":"91","hashOfConfig":"59"},{"size":3484,"mtime":1611555723230,"results":"92","hashOfConfig":"59"},{"size":7242,"mtime":1611555723230,"results":"93","hashOfConfig":"59"},{"size":2014,"mtime":1611555723230,"results":"94","hashOfConfig":"59"},{"size":5671,"mtime":1611555723220,"results":"95","hashOfConfig":"59"},{"size":12974,"mtime":1611555723220,"results":"96","hashOfConfig":"59"},{"size":1155,"mtime":1610583341150,"results":"97","hashOfConfig":"59"},{"size":1352,"mtime":1611185693915,"results":"98","hashOfConfig":"59"},{"size":696,"mtime":1610583341150,"results":"99","hashOfConfig":"59"},{"size":2617,"mtime":1611209661545,"results":"100","hashOfConfig":"59"},{"size":654,"mtime":1611209661545,"results":"101","hashOfConfig":"59"},{"size":2484,"mtime":1611209661545,"results":"102","hashOfConfig":"59"},{"size":1111,"mtime":1610583341150,"results":"103","hashOfConfig":"59"},{"size":500,"mtime":1611555723220,"results":"104","hashOfConfig":"59"},{"size":828,"mtime":1611555723220,"results":"105","hashOfConfig":"59"},{"size":551,"mtime":1610583341150,"results":"106","hashOfConfig":"59"},{"size":919,"mtime":1611555723220,"results":"107","hashOfConfig":"59"},{"size":604,"mtime":1611555723220,"results":"108","hashOfConfig":"59"},{"size":813,"mtime":1610583341150,"results":"109","hashOfConfig":"59"},{"size":481,"mtime":1611185693935,"results":"110","hashOfConfig":"59"},{"size":5953,"mtime":1611555723230,"results":"111","hashOfConfig":"59"},{"size":5940,"mtime":1611555723220,"results":"112","hashOfConfig":"59"},{"size":1588,"mtime":1611555723220,"results":"113","hashOfConfig":"59"},{"size":1625,"mtime":1611185693925,"results":"114","hashOfConfig":"59"},{"size":4559,"mtime":1611555723220,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1void2r",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/index.js",[],["235","236"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/store/store.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/session_api_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/root.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/session_actions.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/app.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/root_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/route_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/ScrollToTop.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_reducer.js",["237"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/entities_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/main/main_page.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/room_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/room.js",["238","239","240","241","242","243","244","245"],"import React, { useState, useRef, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport '../../assets/stylesheets/reset.css';\nimport '../../assets/stylesheets/room.scss';\n\n\n\nconst Room = (props) => {\n\n\n    //!TEST\n        let [peers, setPeers] = useState([]);\n        const [mute, setMute] = useState('Mute');\n        const [video, setVideo] = useState('Video Off');\n        const[trigger, setOn] = useState('off');\n    //!TEST\n        // const [test, setTest] = useState(0);\n\n\n    //!TEST\n        \n        \n    // const [mute, setMute] = useState('Mute'); \n    // const [video, setVideo] = useState('Video Off');\n\n    const userVideo = useRef(); //for video html\n    const partnerVideo = useRef(); //for video html\n    const peerRef = useRef(); //rtc peerConnection\n    const socketRef = useRef();\n    const otherUser = useRef(); //otherUser - generated ID\n    const userStream = useRef();\n    // const setPeers = useRef();\n    \n\n    // 1/1/21 test\n    const otherVideos = useRef(new Array());\n    const otherUsers = useRef(new Array()); \n    // const peers = useRef(new Object()); \n    const otherUserName = useRef(\"\")\n    // 1/1/21 test\n\n    useEffect(() => {\n\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(MediaStream => {\n            userVideo.current.srcObject = MediaStream;\n            userStream.current = MediaStream;\n\n            socketRef.current = io.connect(\"/\");\n            // console.log(socketRef.current)\n\n            \n            // 1/3/21\n            socketRef.current.emit(\"send name\", props.user)\n            socketRef.current.on(\"receive name\", userName => {\n                otherUserName.current = userName\n                setOn('on');\n            })\n            // 1/3/21\n            \n            socketRef.current.emit(\"join room\", props.match.params.roomID);\n            \n            // has the socket emit this event, this event is caught by the server. I believe there's some \n            // 'long polling' involved. Interesting because the connection happens while this is on localhost 3000\n            // and the server is on 5000  \n\n        \n            // i believe the below code only runs when the events happen, after the above event is emitted\n            // it triggers a slew of events on the server side \n            socketRef.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n                // console.log('user A is in the room already', userID)\n\n\n                // 1/1/21 test\n                otherUsers.current.push(userID) \n                    // may have to concat in a situation where a user joins \n                    // and there are multiple existing users\n                    // they would have to make a call to each of the existing users\n\n                // otherUsers.current.forEach( (user) => {\n                //     callUser(user)\n                // })\n\n                // 1/1/21 test\n            });\n\n            // the above event is emitted from the server back to the client who created a chatroom, it basically \n            // it basically says to the user, hey there's someone in this room \n            // likely whats happening is someone clicked on a room link and this component mounts and they're alerted\n            // that there's another user, and also given the other users socket id \n            // so if the above happens then two users are sitting in the same room. \n            // but their sockets need to connect \n            // this i where the callUser function comes in. Essentially it calls the OTHER USER  \n\n            socketRef.current.on(\"user joined\", userID => {\n\n                otherUser.current = userID;\n\n                // 1/1/21 test\n                otherUsers.current.push(userID)\n                // this may not need concat because it should only\n                // be one user being added at a time \n                // this is from the perspective of existing users in the room \n                // 1/1/21 test\n\n                // console.log('other user joined room')\n            });\n\n            socketRef.current.emit(\"user joined\", userID => {\n                otherUser.current = userID;\n                // console.log('user B just joined the room', userID)\n\n            });\n            \n\n\n            //!TEST - WL - trying to remove video on meeting exit\n            socketRef.current.on( \"user left\", id => {\n                const peerObj = peerRef.current.find(p => p.peerID === id);\n                if (peerObj){\n                    peerObj.peer.destroy();\n                }\n                const peers = peerRef.current.filter(p => p.peerID !== id);\n                peerRef.current = peers;\n                setPeers(peers); //state\n                \n            })\n            // finding the peer, destorying the peer, and removing it from the array\n            // socketRef.current.on(\"disconnect\", () => {\n            //     console.log('dIsCoNnEcTeD')\n                \n            // });\n\n            // socketRef.current.on( \"user-disconnected\", room => {\n            //     console.log('room', room)\n                // const peerObj = peerRef.current.find(p => p.peerID === id);\n                // if (peerObj){\n                //     peerObj.peer.destroy();\n                // }\n                // const peers = peerRef.current.filter(p => p.peerID !== id);\n                // peerRef.current = peers;\n                // setPeers(peers); //state\n\n            // })\n            //finding the peer, destorying the peer, and removing it from the array\n            //!TEST\n\n            socketRef.current.on(\"offer\", handleRecieveCall);\n\n            socketRef.current.on(\"answer\", handleAnswer);\n\n            socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n\n            // 1/1/21 test\n            socketRef.current.on(\"killconnection\", killIt);\n            // 1/1/21 test\n        });\n\n    }, []);\n\n  \n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID); \n        // userID is the socket.id of the OTHER PERSON in the room \n        // it is used in the createPeer function and set to the peerRef hook  \n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        //giving our peer individual access to our stream so they can view on their end\n    }\n\n\n        // 1/1/21 test\n            // peerRef.current = {};\n            // peerRef.current[userID] = createPeer(userID)\n        // 1/1/21 test\n    // }   \n    // userStream.current was set to the MediaStream above\n    // i imagine i\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            iceServers: [\n                {\n                    urls: \"stun:stun.stunprotocol.org\"\n                },\n                {\n                    urls: 'turn:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                },\n            ]\n        }); \n        // this constructor takes in an array of objects, these objects are servers which allow peers to connect, should \n        // use your own, look into creating one \n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n\n        // still in the process of calling the other user/ connecting to the other users socket \n        //starts off by instantiating a RTCPeerConnection, this is used to connect two peers and maintain the connection\n\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => { // createOffer is a RTCPeerConnection method\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socketRef.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socketRef.current.emit(\"answer\", payload);\n        })\n    } // this function is handling events related to someone calling the user \n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    } \n\n    // this handles answers both for the caller and the callee because it essentially to establish the connection it needs to \n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) { // is e.candidate the current user / client \n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate, // this e.candidate is like a ICE config used to establish an RTCPeerConnection\n            }\n            socketRef.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) { // incoming maybe whoever is calling \n        const candidate = new RTCIceCandidate(incoming);\n\n        peerRef.current.addIceCandidate(candidate) \n            .catch(e => console.log(e));\n    } // one perspective is from the user you're calling, the other user. Adds this icecandidate to it's peerRef as a key value pair? \n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n\n    }; // creating a video for the person you're calling? \n\n\n    // function hangUp(e) {\n    //     console.log(peerRef.current)\n    //     console.log(socketRef.current)\n    //     console.log(\"make this hangup button\")\n    //     socketRef.current.emit(\"hang up\")\n    //     console.log(userVideo.current)\n    //     let vid = document.getElementById(\"myVideo\")\n    //     vid.parentNode.removeChild(vid);\n    //     console.log('final step?')\n    // };\n\n\n\n    //cuts connection when user leaves page\n    useEffect(() => {\n        return () => {\n            stopStreamedVideo()\n        }\n    },[])\n\n    \n\n    //! VIDEO function\n    const playStop = () => {\n        let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n            // console.log('false', enabled)\n            setVideo('Video On')\n        }else{\n            userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setVideo('Video Off')\n        }\n    }\n\n    //! Cut connection of the person leaving page - media stream only.\n    const stopStreamedVideo = () => {\n        const tracks = userStream.current.getTracks();\n        // console.log(tracks);\n        \n        //!TEST - WL  - Intent here is the black the screen whenever some oneleaves\n        // let enabled = userVideo.current.srcObject.getVideoTracks()[0].enabled;\n        // if(enabled){\n        //     userVideo.current.srcObject.getVideoTracks()[0].enabled = false;\n        // }\n        //!TEST\n        // userVideo.current.srcObject.getVideoTracks()[0].enabled = true;\n\n        //note - stream.stop() is deprecated. Do not use\n        tracks.forEach(function(track) {\n            track.stop();\n            \n        });\n        //! @TOM FYI ADDING IT TO THIS BUTTON\n        testFeatures()\n        // props.history.goBack()\n        // console.log(props.history)\n    }\n\n\n    //! MUTE function\n    const muteStream = () => {\n        const enabled = userVideo.current.srcObject.getAudioTracks()[0].enabled;\n        if(enabled){\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = false;\n            setMute('Unmute')\n            // console.log('false', enabled)\n            // console.log(peerRef)\n            // console.log(peerRef.current)\n            // console.log(userStream)\n            // console.log(userStream.current)\n            \n            // console.log(props.history)\n\n        }else {\n            userVideo.current.srcObject.getAudioTracks()[0].enabled = true;\n            // console.log('true', enabled)\n            setMute('Mute')\n            // console.log(props)\n\n        }\n    }\n    \n    // function muteStream() {\n    //     const tracks = userStream.current.getAudioTracks();\n    //     //note - stream.stop() is deprecated. Do not use\n    //     console.log('audio', tracks)\n    //     tracks.forEach(function(track) {\n    //         track.stop();\n    //     });\n    //     console.log('audio', tracks)\n\n    // }\n    const hangUpButton = () => {\n        onLeave();\n    }\n\n    function onLeave() {\n        userVideo.current.srcObject = null;\n        partnerVideo.current.srcObject = null;\n        peerRef.current.close();\n        peerRef.current.onicecandidate = null;\n        peerRef.current.onaddstream = null;\n        createPeer()\n    };\n\n    // 1/1/21 test\n      const killIt = () => {\n        peerRef.current.close()\n    }\n    // 1/1/21 test\n\n    const testFeatures = () => {\n        // peerRef.current.close(); // works but only if there is a peerRef (only if a connection has been established)\n        //!@TOM added this conditional for your above comment\n        if (peerRef.current){\n            socketRef.current.emit(\"hangUp\", otherUser.current)\n            peerRef.current.close()\n\n        }\n\n    }\n    \n   \n    \n    return (\n        <div className='room_container'>\n            {/* button below now functions with leave meeting */}\n            {/* <button onClick={() => testFeatures()}>Test Button</button> */}\n\n            <div className=\"main\">\n                        <div className=\"video_titles\">\n                            <h1 className=\"title\">{props.user}</h1>\n                            <h1 className=\"title\">{otherUserName.current}</h1>\n                        </div>\n                <div className=\"main_videos\">\n                    <div id=\"video-grid\">\n                        <div>\n                            <video id=\"myVideo\" autoPlay ref={userVideo} muted/>\n                        </div>\n                        <div>\n                            <video autoPlay ref={partnerVideo} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"main_controls_container\">\n                    <div className='main_controls'>\n                        <div>\n                            <button onClick={() => muteStream()}>{mute}</button> \n                            <button onClick={() => playStop()}>{video}</button>  \n                        </div>\n                        <div>\n                            <Link to='/'>\n                                <button onClick={() => stopStreamedVideo()}>Leave Meeting</button>  \n                            </Link>\n\n                        </div>\n                    </div>\n                </div>   \n            </div>\n\n        </div>\n    );\n};\n\nexport default Room;","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/session_errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/questions_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_errors_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/profile_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/responses_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/user_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/reducers/messages_reducer.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/questions_actions.js",["246"],"import * as QuestionsAPIUtil from \"../util/questions_api_util\"\n\nexport const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const RECEIVE_PROFILE_QUESTIONS = \"RECEIVE_PROFILE_QUESTIONS\";\nexport const RECEIVE_QUESTION = \"RECEIVE_QUESTION\"\nexport const REMOVE_QUESTION = \"REMOVE_QUESTION\"\nexport const RECEIVE_ERRORS = \"RECEIVE_ERRORS\"\n\n\n\nexport const RECEIVE_RESPONSE = 'RECEIVE_RESPONSE';\nexport const receiveResponse = (response) => {\n    return {\n        type: RECEIVE_RESPONSE,\n        response\n    }\n}\n\nconst receiveProfileQuestions = (questions) => {\n    return {\n        type: RECEIVE_PROFILE_QUESTIONS,\n        questions // ES6 synthax = questions: questions \n    }\n}\n\nconst receiveQuestions = (questions) => {\n    return {\n        type: RECEIVE_QUESTIONS, \n        questions // ES6 synthax = questions: questions \n    }\n}\n\nconst receiveQuestion = (question) => {\n    return {\n        type: RECEIVE_QUESTION, \n        question\n    }\n}\n\nconst removeQuestion = (question) => {\n    return {\n        type: REMOVE_QUESTION,\n        question \n    }\n} \n// model action should find the question by it's id and delete it, but return the question in case we need to remove it \n// from the state\n\nconst receiveQuestionErrors = (errors) => {\n    return {\n        type: RECEIVE_ERRORS, \n        errors \n    }\n}\n\nexport const fetchQuestions = () => (dispatch) => {\n    return QuestionsAPIUtil.fetchQuestions()\n        .then( res => { dispatch(receiveQuestions(res.data)) } )\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\n//!TEST\n// export const fetchProfileQuestions = (questions) => (dispatch) => {\n//     return QuestionsAPIUtil.fetchQuestions(questions)\n//         .then(res => dispatch(receiveProfileQuestions(res.data)))\n//         .catch(err => dispatch(receiveQuestionErrors(err)))\n// }\nexport const fetchProfileQuestions = () => (dispatch) => {\n    return QuestionsAPIUtil.fetchQuestions()\n        .then(res => dispatch(receiveProfileQuestions(res.data)))\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\n//!TEST\n\nexport const fetchQuestion = (questionId) => (dispatch) => {\n    return QuestionsAPIUtil.fetchQuestion(questionId)\n        .then(res => ( dispatch(receiveQuestion(res.data)), dispatch(receiveResponse(res.data.responses))))\n        .catch(err => (dispatch(receiveQuestionErrors(err))))\n}\n\nexport const postQuestion = (newQuestion) => (dispatch) => {\n    return QuestionsAPIUtil.postQuestion(newQuestion)\n        .then( res => { dispatch(receiveQuestion(res.data)) })\n        .catch( errors => { dispatch(receiveQuestionErrors(errors.response.data)) })\n}\n\n\nexport const updateQuestion = (questionId, questionUpdates) => (dispatch) =>{\n    return QuestionsAPIUtil.updateQuestion(questionId, questionUpdates)\n        .then( res => { dispatch(receiveQuestion(res.data))})\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\nexport const deleteQuestion = (questionId) => (dispatch) => {\n    return QuestionsAPIUtil.deleteQuestion(questionId)\n        .then( res => { dispatch(removeQuestion(res.data)) })\n        .catch(err => dispatch(receiveQuestionErrors(err)))\n}\n\n","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/bulletin_board/bulletin_board.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_show.js",["247"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/login_form.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/session/signup_form.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_show.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/profile/profile.js",["248","249"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/nav/navbar.js",["250","251","252","253","254"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/responses_actions.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/actions/messages_actions.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/questions_api_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_index.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/create_question_form_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/resolved/resolved_index.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/update_question_form_container.js",["255"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateQuestion } from '../../actions/questions_actions'\nimport QuestionForm from './question_form'\n\n\nexport class UpdateQuestionForm extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.receiveReview(this.props.reviewId)\n    }\n\n    render() {\n       const {questionId, subject, content, tag, solved, user} = this.props\n        return (\n            <QuestionForm  \n                questionId = {questionId}\n                subject={subject}\n                content={content}\n                tag={tag}\n                solved={solved}\n                user={user}\n                \n            />\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    \n    return ({ formType: 'Update Question!', errors: state.errors.questions}\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    processForm: (questionId, questionUpdates) => dispatch(updateQuestion(questionId, questionUpdates))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionForm)","/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/chatroom/create_room.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index_item_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/create_answers_form_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/messenger/messenger_container.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/responses_api_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/util/messages_api_util.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/question/question_form.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/messenger/messenger.js",["256","257","258","259"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index.js",[],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_index_item.js",[],["260","261"],"/home/tomc/TBDeveloped/TBDeveloped/frontend/src/components/answer/answer_form.js",["262","263","264"],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":5,"column":1,"nodeType":"271","endLine":35,"endColumn":2},{"ruleId":"272","severity":1,"message":"273","line":13,"column":14,"nodeType":"274","messageId":"275","endLine":13,"endColumn":19},{"ruleId":"272","severity":1,"message":"276","line":16,"column":15,"nodeType":"274","messageId":"275","endLine":16,"endColumn":22},{"ruleId":"272","severity":1,"message":"277","line":37,"column":11,"nodeType":"274","messageId":"275","endLine":37,"endColumn":22},{"ruleId":"278","severity":1,"message":"279","line":37,"column":32,"nodeType":"280","messageId":"281","endLine":37,"endColumn":43},{"ruleId":"278","severity":1,"message":"279","line":38,"column":31,"nodeType":"280","messageId":"281","endLine":38,"endColumn":42},{"ruleId":"282","severity":1,"message":"283","line":161,"column":8,"nodeType":"284","endLine":161,"endColumn":10,"suggestions":"285"},{"ruleId":"282","severity":1,"message":"286","line":289,"column":7,"nodeType":"284","endLine":289,"endColumn":9,"suggestions":"287"},{"ruleId":"272","severity":1,"message":"288","line":365,"column":11,"nodeType":"274","messageId":"275","endLine":365,"endColumn":23},{"ruleId":"289","severity":1,"message":"290","line":78,"column":59,"nodeType":"291","messageId":"292","endLine":78,"endColumn":60},{"ruleId":"293","severity":1,"message":"294","line":83,"column":58,"nodeType":"295","messageId":"296","endLine":83,"endColumn":60},{"ruleId":"293","severity":1,"message":"294","line":62,"column":50,"nodeType":"295","messageId":"296","endLine":62,"endColumn":52},{"ruleId":"293","severity":1,"message":"294","line":103,"column":64,"nodeType":"295","messageId":"296","endLine":103,"endColumn":66},{"ruleId":"297","severity":1,"message":"298","line":230,"column":29,"nodeType":"299","endLine":230,"endColumn":75},{"ruleId":"297","severity":1,"message":"298","line":237,"column":41,"nodeType":"299","endLine":238,"endColumn":64},{"ruleId":"300","severity":1,"message":"301","line":272,"column":57,"nodeType":"299","endLine":272,"endColumn":118},{"ruleId":"297","severity":1,"message":"298","line":274,"column":61,"nodeType":"299","endLine":275,"endColumn":89},{"ruleId":"297","severity":1,"message":"298","line":301,"column":33,"nodeType":"299","endLine":301,"endColumn":79},{"ruleId":"302","severity":1,"message":"303","line":9,"column":5,"nodeType":"304","messageId":"305","endLine":11,"endColumn":6},{"ruleId":"272","severity":1,"message":"306","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":13},{"ruleId":"282","severity":1,"message":"307","line":95,"column":8,"nodeType":"284","endLine":95,"endColumn":22,"suggestions":"308"},{"ruleId":"282","severity":1,"message":"309","line":102,"column":8,"nodeType":"284","endLine":102,"endColumn":23,"suggestions":"310"},{"ruleId":"272","severity":1,"message":"311","line":109,"column":14,"nodeType":"274","messageId":"275","endLine":109,"endColumn":25},{"ruleId":"265","replacedBy":"312"},{"ruleId":"267","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":97,"column":46,"nodeType":"316","messageId":"317","endLine":97,"endColumn":47},{"ruleId":"314","severity":1,"message":"315","line":97,"column":51,"nodeType":"316","messageId":"317","endLine":97,"endColumn":52},{"ruleId":"314","severity":1,"message":"315","line":97,"column":75,"nodeType":"316","messageId":"317","endLine":97,"endColumn":76},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'peers' is assigned a value but never used.","Identifier","unusedVar","'trigger' is assigned a value but never used.","'otherVideos' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callUser', 'handleRecieveCall', 'props.match.params.roomID', and 'props.user'. Either include them or remove the dependency array.","ArrayExpression",["320"],"React Hook useEffect has a missing dependency: 'stopStreamedVideo'. Either include it or remove the dependency array.",["321"],"'hangUpButton' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'use' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["322"],"React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["323"],"'posterValid' is defined but never used.",["318"],["319"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [callUser, handleRecieveCall, props.match.params.roomID, props.user]",{"range":"332","text":"333"},"Update the dependencies array to be: [stopStreamedVideo]",{"range":"334","text":"335"},"Update the dependencies array to be: [props, props.chatID]",{"range":"336","text":"337"},"Update the dependencies array to be: [conversations, messages]",{"range":"338","text":"339"},[5970,5972],"[callUser, handleRecieveCall, props.match.params.roomID, props.user]",[10779,10781],"[stopStreamedVideo]",[2394,2408],"[props, props.chatID]",[2538,2553],"[conversations, messages]"]